# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - ai-chat-ch

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # server_build:
  #   name: Server build

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4

  #   - run: mv -f server/* .

  #   - name: Set up Python version
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: '3.12'
    
  #   - name: Create and start virtual environment
  #     run: |
  #       python -m venv venv
  #       source venv/bin/activate
    
  #   - name: Install dependencies
  #     run: pip install -r requirements.txt
      
  #   - name: Zip artifact for deployment
  #     run: zip release-server.zip ./* -r

  #   - name: Upload artifact for deployment jobs
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: python-app
  #       path: |
  #         release-server.zip
  #         !venv/

  # server_deploy:
  #   name: Server deploy

  #   runs-on: ubuntu-latest
  #   needs: server_build
  
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Login to Azure
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
      
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-app

  #     - name: Unzip artifact for deployment
  #       run: unzip release-server.zip

  #     - name: 'Deploy to Azure Web App'
  #       uses: azure/webapps-deploy@v2
  #       id: deploy-to-webapp
  #       with:
  #         app-name: 'ai-chat-ch'
  #         slot-name: 'Production'            

  client_build:
    name: Client build 
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - run: mv -f client/* .

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: npm install, build
        run: |
          npm install
          npm run build --if-present
          mv ./build/static ./build/standalone/build
          mv ./public ./build/standalone
        env:
          NEXT_PUBLIC_CONNECTION_PROVIDER: ${{ vars.NEXT_PUBLIC_CONNECTION_PROVIDER }}

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  client_deploy:
    name: Client Deploy
    runs-on: ubuntu-latest
    needs: client_build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_FRONTEND }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ai-chat-frontend'
          slot-name: 'production'
          package: .





# jobs:
#   build:
#     runs-on: ubuntu-latest

#     defaults:
#       run:
#         working-directory: server

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python version
#         uses: actions/setup-python@v1
#         with:
#           python-version: '3.12'
      
#       - name: Create and start virtual environment
#         run: |
#           python -m venv venv
#           source venv/bin/activate
      
#       - name: Install dependencies
#         run: pip install -r requirements.txt
        
#       - name: Zip artifact for deployment
#         run: zip release.zip ./* -r

#       - name: Upload artifact for deployment jobs
#         uses: actions/upload-artifact@v4
#         with:
#           name: python-app
#           path: |
#             release.zip
#             !venv/
  
#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
  
#     environment:
#       name: 'Production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
#     # permissions:
#     #   id-token: write #This is required for requesting the JWT
#     steps:
#       - name: Login to Azure
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}
      
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: python-app

#       - name: Unzip artifact for deployment
#         run: unzip release.zip

#       - name: 'Deploy to Azure Web App'
#         uses: azure/webapps-deploy@v2
#         id: deploy-to-webapp
#         with:
#           app-name: 'ai-chat-ch'
#           slot-name: 'Production'
            